package com.xworkz.dao;

import org.apache.log4j.Logger;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.query.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.xworkz.controller.SignInPageController;
import com.xworkz.entity.VaccineEntity;

@Component
public class VaccineDAOImpl implements VaccineDAO {

	@Autowired
	private SessionFactory sessionFactory;

	Logger logger = Logger.getLogger(VaccineDAOImpl.class);

	public VaccineDAOImpl() {
		System.out.println(this.getClass().getSimpleName() + " Bean crated ");
	}

	@Override
	public boolean saveVaccineOTP(VaccineEntity vaccineEntity) {
		Session session = null;
		Transaction transaction = null;
		try {
			session = sessionFactory.openSession();
			transaction = session.beginTransaction();
			session.save(vaccineEntity);
			transaction.commit();
//			System.out.println("vaccine entity is saved");
			logger.info("vaccine entity is saved");
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			if (session != null) {
				session.clear();
//				System.out.println("session is closed");
				logger.info("session is closed");
			} else {
//				System.out.println("session is not closed");
				logger.info("session is not closed");
			}
		}
		return false;
	}

	@Override
	public VaccineEntity findVaccineOTP(String otp) {
		System.out.println("findVaccineOTP() Invoked");
		Session session=null;
		VaccineEntity vaccineEntity=null;
		
		try {
			session=sessionFactory.openSession();
			Query query = session.createNamedQuery("VaccineEntity.findVaccineOTP");
			query.setParameter("OTP", otp);
			Object object=query.uniqueResult();
			vaccineEntity=(VaccineEntity)object;
			if (vaccineEntity != null) {
				System.out.println("vaccine otp="+vaccineEntity);
			} else {
//				System.out.println("vaccine Entity (OTP) not found");
				logger.info("vaccine Entity (OTP) not found");
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
			e.printStackTrace();
		}finally {
			if (session != null) {
				session.clear();
//				System.out.println("session is closed");
				logger.info("session is closed");
			} else {
//				System.out.println("session is not closed");
				logger.info("session is not closed");
			}
		}
		return vaccineEntity;
	}

}
